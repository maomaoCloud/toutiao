<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiaotiaopoker.dao.WxPayLogMapper" >
  <resultMap id="BaseResultMap" type="com.tiaotiaopoker.pojo.WxPayLog" >
    <id column="transaction_id" property="transactionId" jdbcType="VARCHAR" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="pay_fee" property="payFee" jdbcType="INTEGER" />
    <result column="return_code" property="returnCode" jdbcType="VARCHAR" />
    <result column="return_msg" property="returnMsg" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="pay_success_time" property="paySuccessTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tiaotiaopoker.pojo.WxPayLog" extends="BaseResultMap" >
    <result column="notify_data" property="notifyData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    transaction_id, out_trade_no, pay_fee, return_code, return_msg, add_time, pay_success_time
  </sql>
  <sql id="Blob_Column_List" >
    notify_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tiaotiaopoker.pojo.WxPayLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wx_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tiaotiaopoker.pojo.WxPayLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wx_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wx_pay_log
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from wx_pay_log
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiaotiaopoker.pojo.WxPayLogExample" >
    delete from wx_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tiaotiaopoker.pojo.WxPayLog" >
    insert into wx_pay_log (transaction_id, out_trade_no, pay_fee, 
      return_code, return_msg, add_time, 
      pay_success_time, notify_data)
    values (#{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{payFee,jdbcType=INTEGER}, 
      #{returnCode,jdbcType=VARCHAR}, #{returnMsg,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{paySuccessTime,jdbcType=TIMESTAMP}, #{notifyData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tiaotiaopoker.pojo.WxPayLog" >
    insert into wx_pay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="payFee != null" >
        pay_fee,
      </if>
      <if test="returnCode != null" >
        return_code,
      </if>
      <if test="returnMsg != null" >
        return_msg,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="paySuccessTime != null" >
        pay_success_time,
      </if>
      <if test="notifyData != null" >
        notify_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transactionId != null" >
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payFee != null" >
        #{payFee,jdbcType=INTEGER},
      </if>
      <if test="returnCode != null" >
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySuccessTime != null" >
        #{paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notifyData != null" >
        #{notifyData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiaotiaopoker.pojo.WxPayLogExample" resultType="java.lang.Integer" >
    select count(*) from wx_pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update wx_pay_log
    <set >
      <if test="record.transactionId != null" >
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payFee != null" >
        pay_fee = #{record.payFee,jdbcType=INTEGER},
      </if>
      <if test="record.returnCode != null" >
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMsg != null" >
        return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paySuccessTime != null" >
        pay_success_time = #{record.paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.notifyData != null" >
        notify_data = #{record.notifyData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update wx_pay_log
    set transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      pay_fee = #{record.payFee,jdbcType=INTEGER},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      pay_success_time = #{record.paySuccessTime,jdbcType=TIMESTAMP},
      notify_data = #{record.notifyData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update wx_pay_log
    set transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      pay_fee = #{record.payFee,jdbcType=INTEGER},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      pay_success_time = #{record.paySuccessTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiaotiaopoker.pojo.WxPayLog" >
    update wx_pay_log
    <set >
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payFee != null" >
        pay_fee = #{payFee,jdbcType=INTEGER},
      </if>
      <if test="returnCode != null" >
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        return_msg = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySuccessTime != null" >
        pay_success_time = #{paySuccessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notifyData != null" >
        notify_data = #{notifyData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tiaotiaopoker.pojo.WxPayLog" >
    update wx_pay_log
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      pay_fee = #{payFee,jdbcType=INTEGER},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      pay_success_time = #{paySuccessTime,jdbcType=TIMESTAMP},
      notify_data = #{notifyData,jdbcType=LONGVARCHAR}
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiaotiaopoker.pojo.WxPayLog" >
    update wx_pay_log
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      pay_fee = #{payFee,jdbcType=INTEGER},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      pay_success_time = #{paySuccessTime,jdbcType=TIMESTAMP}
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>
</mapper>