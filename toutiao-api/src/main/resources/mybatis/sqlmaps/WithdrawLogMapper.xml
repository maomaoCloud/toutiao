<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiaotiaopoker.dao.WithdrawLogMapper" >
  <resultMap id="BaseResultMap" type="com.tiaotiaopoker.pojo.WithdrawLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="apply_date" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="payment_no" property="paymentNo" jdbcType="VARCHAR" />
    <result column="return_code" property="returnCode" jdbcType="VARCHAR" />
    <result column="return_msg" property="returnMsg" jdbcType="VARCHAR" />
    <result column="result_code" property="resultCode" jdbcType="VARCHAR" />
    <result column="err_code" property="errCode" jdbcType="VARCHAR" />
    <result column="err_code_des" property="errCodeDes" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="spbill_create_ip" property="spbillCreateIp" jdbcType="VARCHAR" />
    <result column="re_user_name" property="reUserName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tiaotiaopoker.pojo.WithdrawLog" extends="BaseResultMap" >
    <result column="xml_data" property="xmlData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, money, apply_date, state, remark, payment_no, return_code, return_msg, 
    result_code, err_code, err_code_des, payment_time, description, spbill_create_ip, 
    re_user_name
  </sql>
  <sql id="Blob_Column_List" >
    xml_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tiaotiaopoker.pojo.WithdrawLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from withdraw_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tiaotiaopoker.pojo.WithdrawLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from withdraw_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from withdraw_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from withdraw_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiaotiaopoker.pojo.WithdrawLogExample" >
    delete from withdraw_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tiaotiaopoker.pojo.WithdrawLog" >
    insert into withdraw_log (id, user_id, money, 
      apply_date, state, remark, 
      payment_no, return_code, return_msg, 
      result_code, err_code, err_code_des, 
      payment_time, description, spbill_create_ip, 
      re_user_name, xml_data)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{paymentNo,jdbcType=VARCHAR}, #{returnCode,jdbcType=VARCHAR}, #{returnMsg,jdbcType=VARCHAR}, 
      #{resultCode,jdbcType=VARCHAR}, #{errCode,jdbcType=VARCHAR}, #{errCodeDes,jdbcType=VARCHAR}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{spbillCreateIp,jdbcType=VARCHAR}, 
      #{reUserName,jdbcType=VARCHAR}, #{xmlData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tiaotiaopoker.pojo.WithdrawLog" >
    insert into withdraw_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="paymentNo != null" >
        payment_no,
      </if>
      <if test="returnCode != null" >
        return_code,
      </if>
      <if test="returnMsg != null" >
        return_msg,
      </if>
      <if test="resultCode != null" >
        result_code,
      </if>
      <if test="errCode != null" >
        err_code,
      </if>
      <if test="errCodeDes != null" >
        err_code_des,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="spbillCreateIp != null" >
        spbill_create_ip,
      </if>
      <if test="reUserName != null" >
        re_user_name,
      </if>
      <if test="xmlData != null" >
        xml_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null" >
        #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null" >
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="resultCode != null" >
        #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="errCode != null" >
        #{errCode,jdbcType=VARCHAR},
      </if>
      <if test="errCodeDes != null" >
        #{errCodeDes,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="spbillCreateIp != null" >
        #{spbillCreateIp,jdbcType=VARCHAR},
      </if>
      <if test="reUserName != null" >
        #{reUserName,jdbcType=VARCHAR},
      </if>
      <if test="xmlData != null" >
        #{xmlData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiaotiaopoker.pojo.WithdrawLogExample" resultType="java.lang.Integer" >
    select count(*) from withdraw_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update withdraw_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.applyDate != null" >
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentNo != null" >
        payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCode != null" >
        return_code = #{record.returnCode,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMsg != null" >
        return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.resultCode != null" >
        result_code = #{record.resultCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errCode != null" >
        err_code = #{record.errCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errCodeDes != null" >
        err_code_des = #{record.errCodeDes,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.spbillCreateIp != null" >
        spbill_create_ip = #{record.spbillCreateIp,jdbcType=VARCHAR},
      </if>
      <if test="record.reUserName != null" >
        re_user_name = #{record.reUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlData != null" >
        xml_data = #{record.xmlData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update withdraw_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      result_code = #{record.resultCode,jdbcType=VARCHAR},
      err_code = #{record.errCode,jdbcType=VARCHAR},
      err_code_des = #{record.errCodeDes,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      spbill_create_ip = #{record.spbillCreateIp,jdbcType=VARCHAR},
      re_user_name = #{record.reUserName,jdbcType=VARCHAR},
      xml_data = #{record.xmlData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update withdraw_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      return_code = #{record.returnCode,jdbcType=VARCHAR},
      return_msg = #{record.returnMsg,jdbcType=VARCHAR},
      result_code = #{record.resultCode,jdbcType=VARCHAR},
      err_code = #{record.errCode,jdbcType=VARCHAR},
      err_code_des = #{record.errCodeDes,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      spbill_create_ip = #{record.spbillCreateIp,jdbcType=VARCHAR},
      re_user_name = #{record.reUserName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiaotiaopoker.pojo.WithdrawLog" >
    update withdraw_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paymentNo != null" >
        payment_no = #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null" >
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="returnMsg != null" >
        return_msg = #{returnMsg,jdbcType=VARCHAR},
      </if>
      <if test="resultCode != null" >
        result_code = #{resultCode,jdbcType=VARCHAR},
      </if>
      <if test="errCode != null" >
        err_code = #{errCode,jdbcType=VARCHAR},
      </if>
      <if test="errCodeDes != null" >
        err_code_des = #{errCodeDes,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="spbillCreateIp != null" >
        spbill_create_ip = #{spbillCreateIp,jdbcType=VARCHAR},
      </if>
      <if test="reUserName != null" >
        re_user_name = #{reUserName,jdbcType=VARCHAR},
      </if>
      <if test="xmlData != null" >
        xml_data = #{xmlData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tiaotiaopoker.pojo.WithdrawLog" >
    update withdraw_log
    set user_id = #{userId,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      result_code = #{resultCode,jdbcType=VARCHAR},
      err_code = #{errCode,jdbcType=VARCHAR},
      err_code_des = #{errCodeDes,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      spbill_create_ip = #{spbillCreateIp,jdbcType=VARCHAR},
      re_user_name = #{reUserName,jdbcType=VARCHAR},
      xml_data = #{xmlData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiaotiaopoker.pojo.WithdrawLog" >
    update withdraw_log
    set user_id = #{userId,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      return_msg = #{returnMsg,jdbcType=VARCHAR},
      result_code = #{resultCode,jdbcType=VARCHAR},
      err_code = #{errCode,jdbcType=VARCHAR},
      err_code_des = #{errCodeDes,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      spbill_create_ip = #{spbillCreateIp,jdbcType=VARCHAR},
      re_user_name = #{reUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>